type Query {
  report(id: String!): Report
  getReports: [Report]
}

type Mutation {
  createReport(createReportInput: CreateReportInput): Report
  updateReport(updateReportInput: UpdateReportInput): Report
  deleteReport(id: String!): Report
}

type Subscription {
  reportChanged: Report
}

type Report {
  id: ID!
  source: Source
  sourceIdentityId: String
  reference: Reference
  state: State
  payload: Payload
  created: String
  isResolved: Boolean
}

type Payload {
  source: Source
  reportType: ReportType
  message: String
  reportId: String
  referenceResourceId: String
  referenceResourceType: ReferenceResourceType
}

type Reference {
  referenceId: String
  referenceType: Source
}

enum Source{
  REPORT
}

enum State{
  OPEN
  CLOSED
}

enum ReportType {
  INFRINGES_PROPERTY
  SPAM
  VIOLATES_POLICIES
}

enum ReferenceResourceType{
  ARTICLE
  POST
  REPLY
}

input CreateReportInput {
  name: String! 
}

input UpdateReportInput {
  id: ID!
  state: State!
  isResolved: Boolean
}
